<resources>
    <string name="app_name">RRODemo</string>
    <string name="textContent">要实现这样的效果, 需要用到:
CoordinatorLayout和AppbarLayout的配合, 以及实现了NestedScrollView的布局或控件.
AppbarLayout是一种支持响应滚动手势的app bar布局, CollapsingToolbarLayout则是专门用来实现子布局内不同元素响应滚动细节的布局.

与AppbarLayout组合的滚动布局(RecyclerView, NestedScrollView等),需要设置 app:layout_behavior = "@string/appbar_scrolling_view_behavior" .没有设置的话, AppbarLayout将不会响应滚动布局的滚动事件.

我们回到再前面一章"Toolbar的使用", 将布局改动如下:可以看到,

    随着文本往上滚动, 顶部的toolbar也往上滚动, 直到消失.
    随着文本往下滚动, 一直滚到文本的第一行露出来, toolbar也逐渐露出来

解释:
从上面的布局中可以看到, 其实在整个父布局CoordinatorLayout下面, 是有2个子布局

    AppbarLayout
    NestedScrollView
    NestedScrollView先放一放, 我们来看AppbarLayout.

    AppBarLayout 继承自LinearLayout，布局方向为垂直方向。所以你可以把它当成垂直布局的LinearLayout来使用。AppBarLayout是在LinearLayou上加了一些材料设计的概念，它可以让你定制当某个可滚动View的滚动手势发生变化时，其内部的子View实现何种动作。

注意:

上面提到的"某个可滚动View", 可以理解为某个ScrollView. 就是说，当某个ScrollView发生滚动时，你可以定制你的“顶部栏”应该执行哪些动作（如跟着一起滚动、保持不动等等）。

这里某个ScrollView就是NestedScrollView或者实现了NestedScrollView机制的其它控件, 如RecyclerView. 它有一个布局行为Layout_Behavior:</string>

    <string name="loading_text">加载中&#8230;</string>
    <string name="no_network">请检查网络后点击重新加载</string>
    <string name="data_error">数据获取失败(ㄒoㄒ)~~</string>
    <string name="empty_view_hint">暂时木有内容呀~~</string>
</resources>
